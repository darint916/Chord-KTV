/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LearnedWordDto,
  UserHandwritingResultDto,
  UserQuizResultDto,
} from '../models/index';
import {
    LearnedWordDtoFromJSON,
    LearnedWordDtoToJSON,
    UserHandwritingResultDtoFromJSON,
    UserHandwritingResultDtoToJSON,
    UserQuizResultDtoFromJSON,
    UserQuizResultDtoToJSON,
} from '../models/index';

/**
 * 
 */
export class UserActivityApi extends runtime.BaseAPI {

    /**
     * Get user\'s favorite playlists
     */
    async apiUserActivityFavoritePlaylistsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<{ [key: string]: any; }>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/favorite/playlists`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get user\'s favorite playlists
     */
    async apiUserActivityFavoritePlaylistsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<{ [key: string]: any; }>> {
        const response = await this.apiUserActivityFavoritePlaylistsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s favorite songs
     */
    async apiUserActivityFavoriteSongsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<{ [key: string]: any; }>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/favorite/songs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get user\'s favorite songs
     */
    async apiUserActivityFavoriteSongsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<{ [key: string]: any; }>> {
        const response = await this.apiUserActivityFavoriteSongsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s handwriting results
     */
    async apiUserActivityHandwritingGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserHandwritingResultDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/handwriting`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserHandwritingResultDtoFromJSON));
    }

    /**
     * Get user\'s handwriting results
     */
    async apiUserActivityHandwritingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserHandwritingResultDto>> {
        const response = await this.apiUserActivityHandwritingGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s learned words
     */
    async apiUserActivityLearnedWordsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<LearnedWordDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/learned-words`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LearnedWordDtoFromJSON));
    }

    /**
     * Get user\'s learned words
     */
    async apiUserActivityLearnedWordsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<LearnedWordDto>> {
        const response = await this.apiUserActivityLearnedWordsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s playlist activity
     */
    async apiUserActivityPlaylistsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<{ [key: string]: any; }>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/playlists`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get user\'s playlist activity
     */
    async apiUserActivityPlaylistsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<{ [key: string]: any; }>> {
        const response = await this.apiUserActivityPlaylistsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s quiz results
     */
    async apiUserActivityQuizzesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserQuizResultDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/quizzes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserQuizResultDtoFromJSON));
    }

    /**
     * Get user\'s quiz results
     */
    async apiUserActivityQuizzesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserQuizResultDto>> {
        const response = await this.apiUserActivityQuizzesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get user\'s song activity
     */
    async apiUserActivitySongsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<{ [key: string]: any; }>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/user/activity/songs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get user\'s song activity
     */
    async apiUserActivitySongsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<{ [key: string]: any; }>> {
        const response = await this.apiUserActivitySongsGetRaw(initOverrides);
        return await response.value();
    }

}
