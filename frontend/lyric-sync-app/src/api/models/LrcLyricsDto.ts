/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MatchScores } from './MatchScores';
import {
    MatchScoresFromJSON,
    MatchScoresFromJSONTyped,
    MatchScoresToJSON,
    MatchScoresToJSONTyped,
} from './MatchScores';

/**
 * 
 * @export
 * @interface LrcLyricsDto
 */
export interface LrcLyricsDto {
    /**
     * 
     * @type {number}
     * @memberof LrcLyricsDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof LrcLyricsDto
     */
    romanizedId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    trackName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    artistName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    albumName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof LrcLyricsDto
     */
    duration?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof LrcLyricsDto
     */
    instrumental?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    plainLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    syncedLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    romanizedPlainLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LrcLyricsDto
     */
    romanizedSyncedLyrics?: string | null;
    /**
     * 
     * @type {Set<string>}
     * @memberof LrcLyricsDto
     */
    alternateTitles?: Set<string> | null;
    /**
     * 
     * @type {Set<string>}
     * @memberof LrcLyricsDto
     */
    alternateArtists?: Set<string> | null;
    /**
     * 
     * @type {MatchScores}
     * @memberof LrcLyricsDto
     */
    titleMatchScores?: MatchScores;
    /**
     * 
     * @type {MatchScores}
     * @memberof LrcLyricsDto
     */
    artistMatchScores?: MatchScores;
}

/**
 * Check if a given object implements the LrcLyricsDto interface.
 */
export function instanceOfLrcLyricsDto(value: object): value is LrcLyricsDto {
    return true;
}

export function LrcLyricsDtoFromJSON(json: any): LrcLyricsDto {
    return LrcLyricsDtoFromJSONTyped(json, false);
}

export function LrcLyricsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LrcLyricsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'romanizedId': json['romanizedId'] == null ? undefined : json['romanizedId'],
        'name': json['name'] == null ? undefined : json['name'],
        'trackName': json['trackName'] == null ? undefined : json['trackName'],
        'artistName': json['artistName'] == null ? undefined : json['artistName'],
        'albumName': json['albumName'] == null ? undefined : json['albumName'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'instrumental': json['instrumental'] == null ? undefined : json['instrumental'],
        'plainLyrics': json['plainLyrics'] == null ? undefined : json['plainLyrics'],
        'syncedLyrics': json['syncedLyrics'] == null ? undefined : json['syncedLyrics'],
        'romanizedPlainLyrics': json['romanizedPlainLyrics'] == null ? undefined : json['romanizedPlainLyrics'],
        'romanizedSyncedLyrics': json['romanizedSyncedLyrics'] == null ? undefined : json['romanizedSyncedLyrics'],
        'alternateTitles': json['alternateTitles'] == null ? undefined : new Set(json['alternateTitles']),
        'alternateArtists': json['alternateArtists'] == null ? undefined : new Set(json['alternateArtists']),
        'titleMatchScores': json['titleMatchScores'] == null ? undefined : MatchScoresFromJSON(json['titleMatchScores']),
        'artistMatchScores': json['artistMatchScores'] == null ? undefined : MatchScoresFromJSON(json['artistMatchScores']),
    };
}

export function LrcLyricsDtoToJSON(json: any): LrcLyricsDto {
    return LrcLyricsDtoToJSONTyped(json, false);
}

export function LrcLyricsDtoToJSONTyped(value?: LrcLyricsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'romanizedId': value['romanizedId'],
        'name': value['name'],
        'trackName': value['trackName'],
        'artistName': value['artistName'],
        'albumName': value['albumName'],
        'duration': value['duration'],
        'instrumental': value['instrumental'],
        'plainLyrics': value['plainLyrics'],
        'syncedLyrics': value['syncedLyrics'],
        'romanizedPlainLyrics': value['romanizedPlainLyrics'],
        'romanizedSyncedLyrics': value['romanizedSyncedLyrics'],
        'alternateTitles': value['alternateTitles'] == null ? undefined : Array.from(value['alternateTitles'] as Set<any>),
        'alternateArtists': value['alternateArtists'] == null ? undefined : Array.from(value['alternateArtists'] as Set<any>),
        'titleMatchScores': MatchScoresToJSON(value['titleMatchScores']),
        'artistMatchScores': MatchScoresToJSON(value['artistMatchScores']),
    };
}

