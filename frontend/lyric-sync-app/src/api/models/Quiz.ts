/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuizQuestion } from './QuizQuestion';
import {
    QuizQuestionFromJSON,
    QuizQuestionFromJSONTyped,
    QuizQuestionToJSON,
    QuizQuestionToJSONTyped,
} from './QuizQuestion';

/**
 * 
 * @export
 * @interface Quiz
 */
export interface Quiz {
    /**
     * 
     * @type {string}
     * @memberof Quiz
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Quiz
     */
    songId?: string;
    /**
     * 
     * @type {Array<QuizQuestion>}
     * @memberof Quiz
     */
    questions?: Array<QuizQuestion> | null;
    /**
     * 
     * @type {Date}
     * @memberof Quiz
     */
    timestamp?: Date;
    /**
     * 
     * @type {number}
     * @memberof Quiz
     */
    difficulty?: number;
    /**
     * 
     * @type {number}
     * @memberof Quiz
     */
    numQuestions?: number;
}

/**
 * Check if a given object implements the Quiz interface.
 */
export function instanceOfQuiz(value: object): value is Quiz {
    return true;
}

export function QuizFromJSON(json: any): Quiz {
    return QuizFromJSONTyped(json, false);
}

export function QuizFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quiz {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'songId': json['songId'] == null ? undefined : json['songId'],
        'questions': json['questions'] == null ? undefined : ((json['questions'] as Array<any>).map(QuizQuestionFromJSON)),
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'difficulty': json['difficulty'] == null ? undefined : json['difficulty'],
        'numQuestions': json['numQuestions'] == null ? undefined : json['numQuestions'],
    };
}

export function QuizToJSON(json: any): Quiz {
    return QuizToJSONTyped(json, false);
}

export function QuizToJSONTyped(value?: Quiz | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'songId': value['songId'],
        'questions': value['questions'] == null ? undefined : ((value['questions'] as Array<any>).map(QuizQuestionToJSON)),
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'difficulty': value['difficulty'],
        'numQuestions': value['numQuestions'],
    };
}

