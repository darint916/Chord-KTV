/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Quiz } from './Quiz';
import {
    QuizFromJSON,
    QuizFromJSONTyped,
    QuizToJSON,
    QuizToJSONTyped,
} from './Quiz';
import type { QuizOption } from './QuizOption';
import {
    QuizOptionFromJSON,
    QuizOptionFromJSONTyped,
    QuizOptionToJSON,
    QuizOptionToJSONTyped,
} from './QuizOption';

/**
 * 
 * @export
 * @interface QuizQuestion
 */
export interface QuizQuestion {
    /**
     * 
     * @type {string}
     * @memberof QuizQuestion
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof QuizQuestion
     */
    quizId?: string;
    /**
     * 
     * @type {Quiz}
     * @memberof QuizQuestion
     */
    quiz?: Quiz;
    /**
     * 
     * @type {number}
     * @memberof QuizQuestion
     */
    questionNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof QuizQuestion
     */
    lyricPhrase?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuizQuestion
     */
    startTimestamp?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuizQuestion
     */
    endTimestamp?: string | null;
    /**
     * 
     * @type {Array<QuizOption>}
     * @memberof QuizQuestion
     */
    options?: Array<QuizOption> | null;
}

/**
 * Check if a given object implements the QuizQuestion interface.
 */
export function instanceOfQuizQuestion(value: object): value is QuizQuestion {
    return true;
}

export function QuizQuestionFromJSON(json: any): QuizQuestion {
    return QuizQuestionFromJSONTyped(json, false);
}

export function QuizQuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuizQuestion {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'quizId': json['quizId'] == null ? undefined : json['quizId'],
        'quiz': json['quiz'] == null ? undefined : QuizFromJSON(json['quiz']),
        'questionNumber': json['questionNumber'] == null ? undefined : json['questionNumber'],
        'lyricPhrase': json['lyricPhrase'] == null ? undefined : json['lyricPhrase'],
        'startTimestamp': json['startTimestamp'] == null ? undefined : json['startTimestamp'],
        'endTimestamp': json['endTimestamp'] == null ? undefined : json['endTimestamp'],
        'options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(QuizOptionFromJSON)),
    };
}

export function QuizQuestionToJSON(json: any): QuizQuestion {
    return QuizQuestionToJSONTyped(json, false);
}

export function QuizQuestionToJSONTyped(value?: QuizQuestion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'quizId': value['quizId'],
        'quiz': QuizToJSON(value['quiz']),
        'questionNumber': value['questionNumber'],
        'lyricPhrase': value['lyricPhrase'],
        'startTimestamp': value['startTimestamp'],
        'endTimestamp': value['endTimestamp'],
        'options': value['options'] == null ? undefined : ((value['options'] as Array<any>).map(QuizOptionToJSON)),
    };
}

