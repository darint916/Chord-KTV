/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GeniusMetaDataDto } from './GeniusMetaDataDto';
import {
    GeniusMetaDataDtoFromJSON,
    GeniusMetaDataDtoFromJSONTyped,
    GeniusMetaDataDtoToJSON,
    GeniusMetaDataDtoToJSONTyped,
} from './GeniusMetaDataDto';

/**
 * 
 * @export
 * @interface SongDto
 */
export interface SongDto {
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    title?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SongDto
     */
    alternateTitles?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    artist?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SongDto
     */
    featuredArtists?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SongDto
     */
    albumNames?: Array<string> | null;
    /**
     * 
     * @type {Date}
     * @memberof SongDto
     */
    releaseDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    genre?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    duration?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    plainLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    lrcLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    lrcRomanizedLyrics?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    lrcTranslatedLyrics?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SongDto
     */
    lrcId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SongDto
     */
    romLrcId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    youTubeId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SongDto
     */
    youTubeInstrumentalId?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SongDto
     */
    alternateYoutubeIds?: Array<string> | null;
    /**
     * 
     * @type {GeniusMetaDataDto}
     * @memberof SongDto
     */
    geniusMetaData?: GeniusMetaDataDto;
}

/**
 * Check if a given object implements the SongDto interface.
 */
export function instanceOfSongDto(value: object): value is SongDto {
    return true;
}

export function SongDtoFromJSON(json: any): SongDto {
    return SongDtoFromJSONTyped(json, false);
}

export function SongDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SongDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'alternateTitles': json['alternateTitles'] == null ? undefined : json['alternateTitles'],
        'artist': json['artist'] == null ? undefined : json['artist'],
        'featuredArtists': json['featuredArtists'] == null ? undefined : json['featuredArtists'],
        'albumNames': json['albumNames'] == null ? undefined : json['albumNames'],
        'releaseDate': json['releaseDate'] == null ? undefined : (new Date(json['releaseDate'])),
        'genre': json['genre'] == null ? undefined : json['genre'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'plainLyrics': json['plainLyrics'] == null ? undefined : json['plainLyrics'],
        'lrcLyrics': json['lrcLyrics'] == null ? undefined : json['lrcLyrics'],
        'lrcRomanizedLyrics': json['lrcRomanizedLyrics'] == null ? undefined : json['lrcRomanizedLyrics'],
        'lrcTranslatedLyrics': json['lrcTranslatedLyrics'] == null ? undefined : json['lrcTranslatedLyrics'],
        'lrcId': json['lrcId'] == null ? undefined : json['lrcId'],
        'romLrcId': json['romLrcId'] == null ? undefined : json['romLrcId'],
        'youTubeId': json['youTubeId'] == null ? undefined : json['youTubeId'],
        'youTubeInstrumentalId': json['youTubeInstrumentalId'] == null ? undefined : json['youTubeInstrumentalId'],
        'alternateYoutubeIds': json['alternateYoutubeIds'] == null ? undefined : json['alternateYoutubeIds'],
        'geniusMetaData': json['geniusMetaData'] == null ? undefined : GeniusMetaDataDtoFromJSON(json['geniusMetaData']),
    };
}

export function SongDtoToJSON(json: any): SongDto {
    return SongDtoToJSONTyped(json, false);
}

export function SongDtoToJSONTyped(value?: SongDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'alternateTitles': value['alternateTitles'],
        'artist': value['artist'],
        'featuredArtists': value['featuredArtists'],
        'albumNames': value['albumNames'],
        'releaseDate': value['releaseDate'] === null ? null : ((value['releaseDate'] as any)?.toISOString().substring(0,10)),
        'genre': value['genre'],
        'duration': value['duration'],
        'plainLyrics': value['plainLyrics'],
        'lrcLyrics': value['lrcLyrics'],
        'lrcRomanizedLyrics': value['lrcRomanizedLyrics'],
        'lrcTranslatedLyrics': value['lrcTranslatedLyrics'],
        'lrcId': value['lrcId'],
        'romLrcId': value['romLrcId'],
        'youTubeId': value['youTubeId'],
        'youTubeInstrumentalId': value['youTubeInstrumentalId'],
        'alternateYoutubeIds': value['alternateYoutubeIds'],
        'geniusMetaData': GeniusMetaDataDtoToJSON(value['geniusMetaData']),
    };
}

