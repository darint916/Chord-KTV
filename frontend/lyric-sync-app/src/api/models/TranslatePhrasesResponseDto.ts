/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Phrases } from './Phrases';
import {
    PhrasesFromJSON,
    PhrasesFromJSONTyped,
    PhrasesToJSON,
    PhrasesToJSONTyped,
} from './Phrases';

/**
 * 
 * @export
 * @interface TranslatePhrasesResponseDto
 */
export interface TranslatePhrasesResponseDto {
    /**
     * 
     * @type {Array<Phrases>}
     * @memberof TranslatePhrasesResponseDto
     */
    phrases?: Array<Phrases> | null;
}

/**
 * Check if a given object implements the TranslatePhrasesResponseDto interface.
 */
export function instanceOfTranslatePhrasesResponseDto(value: object): value is TranslatePhrasesResponseDto {
    return true;
}

export function TranslatePhrasesResponseDtoFromJSON(json: any): TranslatePhrasesResponseDto {
    return TranslatePhrasesResponseDtoFromJSONTyped(json, false);
}

export function TranslatePhrasesResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslatePhrasesResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'phrases': json['phrases'] == null ? undefined : ((json['phrases'] as Array<any>).map(PhrasesFromJSON)),
    };
}

export function TranslatePhrasesResponseDtoToJSON(json: any): TranslatePhrasesResponseDto {
    return TranslatePhrasesResponseDtoToJSONTyped(json, false);
}

export function TranslatePhrasesResponseDtoToJSONTyped(value?: TranslatePhrasesResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'phrases': value['phrases'] == null ? undefined : ((value['phrases'] as Array<any>).map(PhrasesToJSON)),
    };
}

