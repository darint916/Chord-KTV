/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LanguageCode } from './LanguageCode';
import {
    LanguageCodeFromJSON,
    LanguageCodeFromJSONTyped,
    LanguageCodeToJSON,
    LanguageCodeToJSONTyped,
} from './LanguageCode';

/**
 * 
 * @export
 * @interface TranslationRequestDto
 */
export interface TranslationRequestDto {
    /**
     * 
     * @type {string}
     * @memberof TranslationRequestDto
     */
    originalLyrics?: string | null;
    /**
     * 
     * @type {LanguageCode}
     * @memberof TranslationRequestDto
     */
    languageCode?: LanguageCode;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationRequestDto
     */
    romanize?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationRequestDto
     */
    translate?: boolean;
}



/**
 * Check if a given object implements the TranslationRequestDto interface.
 */
export function instanceOfTranslationRequestDto(value: object): value is TranslationRequestDto {
    return true;
}

export function TranslationRequestDtoFromJSON(json: any): TranslationRequestDto {
    return TranslationRequestDtoFromJSONTyped(json, false);
}

export function TranslationRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'originalLyrics': json['originalLyrics'] == null ? undefined : json['originalLyrics'],
        'languageCode': json['languageCode'] == null ? undefined : LanguageCodeFromJSON(json['languageCode']),
        'romanize': json['romanize'] == null ? undefined : json['romanize'],
        'translate': json['translate'] == null ? undefined : json['translate'],
    };
}

export function TranslationRequestDtoToJSON(json: any): TranslationRequestDto {
    return TranslationRequestDtoToJSONTyped(json, false);
}

export function TranslationRequestDtoToJSONTyped(value?: TranslationRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'originalLyrics': value['originalLyrics'],
        'languageCode': LanguageCodeToJSON(value['languageCode']),
        'romanize': value['romanize'],
        'translate': value['translate'],
    };
}

