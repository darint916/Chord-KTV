/* tslint:disable */
/* eslint-disable */
/**
 * ChordKTV API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserPlaylistActivity } from './UserPlaylistActivity';
import {
    UserPlaylistActivityFromJSON,
    UserPlaylistActivityFromJSONTyped,
    UserPlaylistActivityToJSON,
    UserPlaylistActivityToJSONTyped,
} from './UserPlaylistActivity';
import type { UserSongActivity } from './UserSongActivity';
import {
    UserSongActivityFromJSON,
    UserSongActivityFromJSONTyped,
    UserSongActivityToJSON,
    UserSongActivityToJSONTyped,
} from './UserSongActivity';
import type { LearnedWord } from './LearnedWord';
import {
    LearnedWordFromJSON,
    LearnedWordFromJSONTyped,
    LearnedWordToJSON,
    LearnedWordToJSONTyped,
} from './LearnedWord';
import type { UserQuizResult } from './UserQuizResult';
import {
    UserQuizResultFromJSON,
    UserQuizResultFromJSONTyped,
    UserQuizResultToJSON,
    UserQuizResultToJSONTyped,
} from './UserQuizResult';
import type { UserHandwritingResult } from './UserHandwritingResult';
import {
    UserHandwritingResultFromJSON,
    UserHandwritingResultFromJSONTyped,
    UserHandwritingResultToJSON,
    UserHandwritingResultToJSONTyped,
} from './UserHandwritingResult';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string | null;
    /**
     * 
     * @type {Array<UserPlaylistActivity>}
     * @memberof User
     */
    playlistActivities?: Array<UserPlaylistActivity> | null;
    /**
     * 
     * @type {Array<UserQuizResult>}
     * @memberof User
     */
    quizResults?: Array<UserQuizResult> | null;
    /**
     * 
     * @type {Array<UserSongActivity>}
     * @memberof User
     */
    songActivities?: Array<UserSongActivity> | null;
    /**
     * 
     * @type {Array<UserHandwritingResult>}
     * @memberof User
     */
    handwritingResults?: Array<UserHandwritingResult> | null;
    /**
     * 
     * @type {Array<LearnedWord>}
     * @memberof User
     */
    learnedWords?: Array<LearnedWord> | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'email': json['email'],
        'playlistActivities': json['playlistActivities'] == null ? undefined : ((json['playlistActivities'] as Array<any>).map(UserPlaylistActivityFromJSON)),
        'quizResults': json['quizResults'] == null ? undefined : ((json['quizResults'] as Array<any>).map(UserQuizResultFromJSON)),
        'songActivities': json['songActivities'] == null ? undefined : ((json['songActivities'] as Array<any>).map(UserSongActivityFromJSON)),
        'handwritingResults': json['handwritingResults'] == null ? undefined : ((json['handwritingResults'] as Array<any>).map(UserHandwritingResultFromJSON)),
        'learnedWords': json['learnedWords'] == null ? undefined : ((json['learnedWords'] as Array<any>).map(LearnedWordFromJSON)),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'email': value['email'],
        'playlistActivities': value['playlistActivities'] == null ? undefined : ((value['playlistActivities'] as Array<any>).map(UserPlaylistActivityToJSON)),
        'quizResults': value['quizResults'] == null ? undefined : ((value['quizResults'] as Array<any>).map(UserQuizResultToJSON)),
        'songActivities': value['songActivities'] == null ? undefined : ((value['songActivities'] as Array<any>).map(UserSongActivityToJSON)),
        'handwritingResults': value['handwritingResults'] == null ? undefined : ((value['handwritingResults'] as Array<any>).map(UserHandwritingResultToJSON)),
        'learnedWords': value['learnedWords'] == null ? undefined : ((value['learnedWords'] as Array<any>).map(LearnedWordToJSON)),
    };
}

